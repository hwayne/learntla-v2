<?xml version="1.0"?>
<root folder="optimization">
<comment>
  \* to_process \in LET
  \*   i_to_worker == [1..MaxNum -> Workers]
  \* IN
  \*   { [w \in Workers |-> {x \in 1..MaxNum : itw[x] = w}] :
  \*   itw \in i_to_worker } 
</comment>

<spec name="optimization" num="6">
---- MODULE $name ----
EXTENDS Integers, Sequences, TLC
CONSTANTS MaxNum, Workers
<s on="2-">
Constraint == TLCGet("level") &lt; 11</s><s on="3-">
Symmetry == Permutations(Workers)</s>

(*--algorithm alg
variables<s on="-3,5-">
  i = 1;
  to_process = [w \in Workers |-> {}];</s><s on="4">
  to_process \in {
    tp \in [Workers -> SUBSET (1..MaxNum)]:
      \A x \in 1..MaxNum:
        \E w \in Workers:
          /\ x \in tp[w]
          /\ \A w2 \in Workers \ {w}:
            x \notin tp[w2]
    }</s>

<s on="-3,5-">process writer = "writer"
begin 
  Write:
    while i &lt;= MaxNum do
      with w \in Workers do
        to_process[w] := @ \union {i};
        i := i + 1;
      end with;
    end while;
end process;</s>

process worker \in Workers
variable total = 0;
local = 0;
begin<s on="-4,6-">
  Read:<s on="6">
    await to_process[self] # {};</s>
    with <s on="-5,7-">x \in to_process[self]</s><s on="6">x = CHOOSE x \in to_process[self]: TRUE</s> do
      local := x;
      to_process[self] := @ \ {local};
    end with;
    Update:
      total := total + local;
      goto Read;</s><s on="5">
  Read:
    with x \in to_process[self] do
      total := total + x;
      to_process[self] := @ \ {x};
    end with;
    goto Read;</s>
end process;

end algorithm; *)
====
</spec>

<comment>
  Showcasing view
</comment>
<spec name="optimization_view" num="3">
---- MODULE $name ----
EXTENDS Integers, Sequences, TLC
CONSTANTS MaxNum, Workers

Constraint == TLCGet("level") &lt; 11
Symmetry == Permutations(Workers)
(*--algorithm alg
variables
  i = 1;
  to_process = [w \in Workers |-> {}];
  aux_last_run = "none";<s on="2">

define
  view == &lt;&lt;i, to_process, pc, total>>
end define;</s>

process writer = "writer"
begin 
  Write:
    while i &lt;= MaxNum do
      with w \in Workers do
        to_process[w] := @ \union {i};
        i := i + 1;
      end with;
      aux_last_run := "writer";
    end while;
end process;

process worker \in Workers
variable total = 0;
local = 0;
begin
  Read:
    with x \in to_process[self] do
      local := x;
      to_process[self] := @ \ {local};
    end with;
    aux_last_run := self;
    Update:
      total := total + local;
      aux_last_run := self;
      goto Read;
end process;

end algorithm; *)<s on="3">
\* under the translation
view == &lt;&lt;i, to_process, pc, total, local>>
</s>
====
</spec>
</root>
